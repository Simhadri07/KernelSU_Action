name: Kernel Builder

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v3
        with:
          repository: xiaomi-mediatek-devs/android_kernel_xiaomi_mt6877
          ref: lineage-21

      - name: Setup Build Environment with Nala
        run: |
          sudo apt update
          sudo apt install -y nala
          sudo nala update
          sudo nala install --assume-yes build-essential gcc-aarch64-linux-gnu clang ccache \
            libncurses5-dev libssl-dev bison flex bc git zip curl
          mkdir -p $GITHUB_WORKSPACE/output
          echo "Storage after setup:"
          df -h
          free -h

      - name: Add Swap Space
        run: |
          sudo fallocate -l 4G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h
          echo "Storage after adding swap space:"
          df -h

      - name: Cache Kernel Build Artifacts
        uses: actions/cache@v3
        with:
          path: $GITHUB_WORKSPACE/output
          key: ${{ runner.os }}-kernel-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-kernel-build-
        run: |
          echo "Storage after caching kernel build artifacts:"
          df -h

      - name: Cache AnyKernel3 Repository
        uses: actions/cache@v3
        with:
          path: $GITHUB_WORKSPACE/anykernel
          key: ${{ runner.os }}-anykernel3-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-anykernel3-
        run: |
          echo "Storage after caching AnyKernel3 repository:"
          df -h

      - name: Build Kernel
        env:
          ARCH: arm64
          CROSS_COMPILE: aarch64-linux-gnu-
        run: |
          export PATH=$PATH:/usr/lib/llvm-14/bin
          make O=$GITHUB_WORKSPACE/output ruby_defconfig
          make O=$GITHUB_WORKSPACE/output -j2 Image.gz-dtb | tee build.log
          echo "Storage after kernel build:"
          df -h
          free -h

      - name: Verify Kernel Output
        run: |
          if [ ! -f $GITHUB_WORKSPACE/output/arch/arm64/boot/Image.gz-dtb ]; then
            echo "Kernel Image not found. Build failed!"
            exit 1
          fi
          echo "Storage after verifying kernel output:"
          df -h

      - name: Package Kernel with AnyKernel3
        if: success()
        run: |
          git clone https://github.com/osm0sis/AnyKernel3 $GITHUB_WORKSPACE/anykernel || true
          cp $GITHUB_WORKSPACE/output/arch/arm64/boot/Image.gz-dtb $GITHUB_WORKSPACE/anykernel/
          cd $GITHUB_WORKSPACE/anykernel
          zip -r9 kernel.zip .
          echo "Storage after packaging kernel with AnyKernel3:"
          df -h

      - name: Upload Kernel Artifact
        uses: actions/upload-artifact@v3
        with:
          name: compiled-kernel
          path: $GITHUB_WORKSPACE/anykernel/kernel.zip
        run: |
          echo "Storage after uploading kernel artifact:"
          df -h
